syntax = "proto2";
option java_package = "ml.generall";

// Position of meta info
message Position {
  // from position
  required int32 fromPos = 1;
  // to position
  required int32 toPos = 2;
  // Next available id: 3
}

// parameters of mention
message Params {
  // Summ weight of tokens
  required double sum_weight = 1;  
  // average weight of tokens
  required double avg_wight = 2;  // Required
  // count of tokens
  required int32 word_count = 3;  // Required
    // Next available id: 4
}

// Context of mention
message Context {
  // size of context
  required int32 size = 1;  // Required
  // left context string
  optional string left = 2; 
  // right context string
  optional string right = 3;
  // Next available id: 1
}

// Concept link
message Concept {
  // Link to concept
  required string link = 1;  // Required
  // Weight of concept link
  optional double weight = 2;
  // Count of hits
  optional int32 hits = 3;

  // Next available id: 1
}

//Mention description 
message Mention {
  // id of mention
  required int64 id = 1;  // Required int64 id = 1; 
  // Resolver name: elastic or wikimention
  optional string resolver = 2;  // Required

  // Text of mention
  required string text = 3;  // Required

  // Position of mention
  required Position position = 4;  // Required

  // Params of mention
  optional Params params = 5;  // Required

  // Context of mention
  optional Context context = 6;  // Required

  // Concepts
  repeated Concept concepts = 7;
  
  // Next available id: 8
}

// Token description
message Token {
  // Token string
  optional string token = 1;  // Required

  // Lemma of token
  optional string lemma = 2;  // Required

  // Part of speech tag
  optional string pos_tag = 3;  // Required

  // parser tag
  optional string parserTag = 4;  // Required

  // Group id of token
  optional int32 group = 5;  // Required
  
  // Mentions id of this token
  repeated int32 mentions = 6;

  // Next available id: 1
}

// Sentence object. 
message Sentente {
  // Complete sentence text
  optional string sent = 1;  // Required
  
  // Mentions
  repeated Mention mentions = 2;

  // Name of sentence parser: CoreNLP, OpenNLP e.t.c
  optional string parser_name = 3;  // Required
  

  // Result of string parsing
  repeated Token parse_result = 4;

  // Sentence before observed
  optional string prevSentence = 5;

  // Sentence after observed
  optional string nextSentence = 6;


  // Next available id: 7
}

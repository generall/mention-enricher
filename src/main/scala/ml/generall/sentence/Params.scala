// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package ml.generall.sentence



/** parameters of mention
  *
  * @param sumWeight
  *   Summ weight of tokens
  * @param avgWight
  *   average weight of tokens
  *   Required
  * @param wordCount
  *   count of tokens
  *   Required
  */
@SerialVersionUID(0L)
final case class Params(
    sumWeight: Double,
    avgWight: Double,
    wordCount: Int
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Params] with com.trueaccord.lenses.Updatable[Params] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += com.google.protobuf.CodedOutputStream.computeDoubleSize(1, sumWeight)
      __size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, avgWight)
      __size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, wordCount)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeDouble(1, sumWeight)
      _output__.writeDouble(2, avgWight)
      _output__.writeInt32(3, wordCount)
    }
    def mergeFrom(`_input__`: com.google.protobuf.CodedInputStream): ml.generall.sentence.Params = {
      var __sumWeight = this.sumWeight
      var __avgWight = this.avgWight
      var __wordCount = this.wordCount
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 9 =>
            __sumWeight = _input__.readDouble()
          case 17 =>
            __avgWight = _input__.readDouble()
          case 24 =>
            __wordCount = _input__.readInt32()
          case tag => _input__.skipField(tag)
        }
      }
      ml.generall.sentence.Params(
          sumWeight = __sumWeight,
          avgWight = __avgWight,
          wordCount = __wordCount
      )
    }
    def withSumWeight(__v: Double): Params = copy(sumWeight = __v)
    def withAvgWight(__v: Double): Params = copy(avgWight = __v)
    def withWordCount(__v: Int): Params = copy(wordCount = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => sumWeight
        case 2 => avgWight
        case 3 => wordCount
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = ml.generall.sentence.Params
}

object Params extends com.trueaccord.scalapb.GeneratedMessageCompanion[ml.generall.sentence.Params] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ml.generall.sentence.Params] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): ml.generall.sentence.Params = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    ml.generall.sentence.Params(
      __fieldsMap(__fields.get(0)).asInstanceOf[Double],
      __fieldsMap(__fields.get(1)).asInstanceOf[Double],
      __fieldsMap(__fields.get(2)).asInstanceOf[Int]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = SentenceProto.descriptor.getMessageTypes.get(1)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = ml.generall.sentence.Params(
    sumWeight = 0.0,
    avgWight = 0.0,
    wordCount = 0
  )
  implicit class ParamsLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, ml.generall.sentence.Params]) extends com.trueaccord.lenses.ObjectLens[UpperPB, ml.generall.sentence.Params](_l) {
    def sumWeight: com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.sumWeight)((c_, f_) => c_.copy(sumWeight = f_))
    def avgWight: com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.avgWight)((c_, f_) => c_.copy(avgWight = f_))
    def wordCount: com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.wordCount)((c_, f_) => c_.copy(wordCount = f_))
  }
  final val SUM_WEIGHT_FIELD_NUMBER = 1
  final val AVG_WIGHT_FIELD_NUMBER = 2
  final val WORD_COUNT_FIELD_NUMBER = 3
}

// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package ml.generall.sentence



/** Position of meta info
  *
  * @param fromPos
  *   from position
  * @param toPos
  *   to position
  *   Next available id: 3
  */
@SerialVersionUID(0L)
final case class Position(
    fromPos: Int,
    toPos: Int
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Position] with com.trueaccord.lenses.Updatable[Position] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      __size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, fromPos)
      __size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, toPos)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: com.google.protobuf.CodedOutputStream): Unit = {
      _output__.writeInt32(1, fromPos)
      _output__.writeInt32(2, toPos)
    }
    def mergeFrom(`_input__`: com.google.protobuf.CodedInputStream): ml.generall.sentence.Position = {
      var __fromPos = this.fromPos
      var __toPos = this.toPos
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __fromPos = _input__.readInt32()
          case 16 =>
            __toPos = _input__.readInt32()
          case tag => _input__.skipField(tag)
        }
      }
      ml.generall.sentence.Position(
          fromPos = __fromPos,
          toPos = __toPos
      )
    }
    def withFromPos(__v: Int): Position = copy(fromPos = __v)
    def withToPos(__v: Int): Position = copy(toPos = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => fromPos
        case 2 => toPos
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = ml.generall.sentence.Position
}

object Position extends com.trueaccord.scalapb.GeneratedMessageCompanion[ml.generall.sentence.Position] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[ml.generall.sentence.Position] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): ml.generall.sentence.Position = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    ml.generall.sentence.Position(
      __fieldsMap(__fields.get(0)).asInstanceOf[Int],
      __fieldsMap(__fields.get(1)).asInstanceOf[Int]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = SentenceProto.descriptor.getMessageTypes.get(0)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = ml.generall.sentence.Position(
    fromPos = 0,
    toPos = 0
  )
  implicit class PositionLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, ml.generall.sentence.Position]) extends com.trueaccord.lenses.ObjectLens[UpperPB, ml.generall.sentence.Position](_l) {
    def fromPos: com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.fromPos)((c_, f_) => c_.copy(fromPos = f_))
    def toPos: com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.toPos)((c_, f_) => c_.copy(toPos = f_))
  }
  final val FROMPOS_FIELD_NUMBER = 1
  final val TOPOS_FIELD_NUMBER = 2
}
